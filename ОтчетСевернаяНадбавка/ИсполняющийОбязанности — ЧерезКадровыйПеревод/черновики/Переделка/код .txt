
Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Справочник.Сотрудники"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Внешний приказ о временном исполнении обязанностей"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.1"); 
	ПараметрыРегистрации.Вставить("Информация", "Это ВПФ ВнешнийПриказОВременномИсполненииОбязанностей"); 
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Внешний приказ о временном исполнении обязанностей", "ПФ_MXL_ВнешнийПриказОВременномИсполненииОбязанностей", "ВызовСерверногоМетода", Истина, "ПФ_MXL_ВнешнийПриказОВременномИсполненииОбязанностей");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

	Возврат ПараметрыРегистрации;

КонецФункции // СведенияОВнешнейОбработке()


Функция ПолучитьТаблицуКоманд()
Команды = Новый ТаблицаЗначений;
Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
Возврат Команды;
КонецФункции // СведенияОВнешнейОбработке

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

НоваяКоманда = ТаблицаКоманд.Добавить();
НоваяКоманда.Представление = Представление; 
НоваяКоманда.Идентификатор = Идентификатор;
НоваяКоманда.Использование = Использование;
НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры  // ДобавитьКоманду

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
	"ПФ_MXL_ВнешнийПриказОВременномИсполненииОбязанностей", 
	"ВнешнийПриказОВременномИсполненииОбязанностей", 
	СформироватьПечатнуюФорму(МассивОбъектов[0], ОбъектыПечати));
	
КонецПроцедуры // Печать()


&Сервер
Функция СформироватьПечатнуюФорму(СсылкаНаОбъект, ОбъектПечати)
	
	//Документ1 = СсылкаНаОбъект.Параметры;
	
	
	
	Документ = СсылкаНаОбъект.Ссылка;
	
	ТабДокумент = Новый ТабличныйДокумент;
	МакетОбработки = ЭтотОбъект.ПолучитьМакет("ПФ_MXL_ВнешнийПриказОВременномИсполненииОбязанностей");	
	
	
	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка");//0
	ОбластьДатаРаботы = МакетОбработки.ПолучитьОбласть("ДатаРаботы");//1
//	//ОбластьРаботник = МакетОбработки.ПолучитьОбласть("Работник");//2
	ОбластьПодвал = МакетОбработки.ПолучитьОбласть("Подвал");//3
	ОбластьПодписьОзнакомлен = МакетОбработки.ПолучитьОбласть("ПодписьОзнакомлен");//4 
	ОбластьОзнакомлен = МакетОбработки.ПолучитьОбласть("Ознакомлен");//5  

		ТабДокумент.Вывести(ОбластьШапка);




			ТабДокумент.Вывести(ОбластьДатаРаботы);
		
		ТабДокумент.Вывести(ОбластьПодвал);
		ТабДокумент.Вывести(ОбластьПодписьОзнакомлен);
		ТабДокумент.Вывести(ОбластьОзнакомлен);
		

Возврат ТабДокумент;


КонецФункции // СформироватьПечатнуюФорму()

&НаСервере
Функция ДолжностьСотрудника(Сотрудник) // Через типовую функцию

    Сотрудники = Новый Массив;
    Сотрудники.Добавить(Сотрудник);

    Сведения = КадровыйУчет.КадровыеДанныеСотрудников(Истина,Сотрудники,"Организация,Должность");
    Если Сведения.Количество()>0 Тогда
        ТекДолжность = Сведения[0].Должность;
    Иначе
        ТекДолжность = ПредопределенноеЗначение("Справочник.Должности.ПустаяСсылка");
    КонецЕсли;

    Возврат ТекДолжность;

КонецФункции

//&НаСервере
Функция ПодразделениеОрганизациии(Руководитель) // Через типовую функцию

    Руководители = Новый Массив;
    Руководители.Добавить(Руководитель);

    Сведения = КадровыйУчет.КадровыеДанныеСотрудников(Истина,Руководители,"Организация,Должность");
    Если Сведения.Количество()>0 Тогда
        ТекПодразделение = Сведения[0].Подразделение;
    Иначе
        ТекПодразделение = ПредопределенноеЗначение("ПодразделенияОрганизаций.ПустаяСсылка");
    КонецЕсли;

    Возврат ТекПодразделение;

КонецФункции



